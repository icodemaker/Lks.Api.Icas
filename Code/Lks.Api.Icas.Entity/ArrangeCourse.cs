// <auto-generated>
using Lks.Enum;
using System;
using System.Collections.Generic;
using System.Data.Entity;

namespace Lks.Api.Icas.Entity
{

    /// <summary>
    /// ArrangeCourse
    /// </summary>
    [Serializable]
    public class ArrangeCourse
    {
        public int Id { get; set; } // Id (Primary key)
        public int? CourseId { get; set; } // CourseId
        public DateTime BeginTime { get; set; } // BeginTime
        public CancelStatusType CancelStatusType { get; set; } // CancelStatusType
        public Status Status { get; set; } // Status

        // Reverse navigation

        /// <summary>
        /// Child BookRecords where [BookRecord].[ArrangeCourseId] point to this entity (FK_BookRecord_ArrangeCourse)
        /// </summary>
        public virtual ICollection<BookRecord> BookRecords { get; set; } // BookRecord.FK_BookRecord_ArrangeCourse
        /// <summary>
        /// Child TeachRecords where [TeachRecord].[ArrangeCourseId] point to this entity (FK_TeachRecord_ArrangeCourse)
        /// </summary>
        public virtual ICollection<TeachRecord> TeachRecords { get; set; } // TeachRecord.FK_TeachRecord_ArrangeCourse

        // Foreign keys

        /// <summary>
        /// Parent Course pointed by [ArrangeCourse].([CourseId]) (FK_ArrangeCourse_Course)
        /// </summary>
        public virtual Course Course { get; set; } // FK_ArrangeCourse_Course

        public ArrangeCourse()
        {
            BookRecords = new List<BookRecord>();
            TeachRecords = new List<TeachRecord>();
        }
    }

}
// </auto-generated>
