// <auto-generated>
using Lks.Enum;
using System;
using System.Collections.Generic;
using System.Data.Entity;

namespace Lks.Api.Icas.Entity
{

    /// <summary>
    /// StudentProductPackageCourse
    /// </summary>
    public class StudentProductPackageCourseMap : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StudentProductPackageCourse>
    {
        public StudentProductPackageCourseMap()
            : this("stu")
        {
        }

        public StudentProductPackageCourseMap(string schema)
        {
            ToTable("StudentProductPackageCourse", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.StudentProductPackageId).HasColumnName(@"StudentProductPackageId").HasColumnType("int").IsRequired();
            Property(x => x.CourseId).HasColumnName(@"CourseId").HasColumnType("int").IsRequired();
            Property(x => x.IsComplete).HasColumnName(@"IsComplete").HasColumnType("bit").IsRequired();
            Property(x => x.OrderNum).HasColumnName(@"OrderNum").HasColumnType("int").IsRequired();
            Property(x => x.Status).HasColumnName(@"Status").HasColumnType("bigint").IsRequired();

            // Foreign keys
            HasRequired(a => a.Course).WithMany(b => b.StudentProductPackageCourses).HasForeignKey(c => c.CourseId).WillCascadeOnDelete(false); // FK_StudentProductPackageCourse_Course
            HasRequired(a => a.StudentProductPackage).WithMany(b => b.StudentProductPackageCourses).HasForeignKey(c => c.StudentProductPackageId); // FK_StudentProductPackageCourse_StudentProductPackage
        }
    }

}
// </auto-generated>
