// <auto-generated>
using Lks.Enum;
using System;
using System.Collections.Generic;
using System.Data.Entity;

namespace Lks.Api.Icas.Entity
{

    /// <summary>
    /// TeachRecord
    /// </summary>
    public class TeachRecordMap : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TeachRecord>
    {
        public TeachRecordMap()
            : this("study")
        {
        }

        public TeachRecordMap(string schema)
        {
            ToTable("TeachRecord", schema);
            HasKey(x => new { x.ArrangeCourseId, x.TeacherId });

            Property(x => x.ArrangeCourseId).HasColumnName(@"ArrangeCourseId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.TeacherId).HasColumnName(@"TeacherId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Status).HasColumnName(@"Status").HasColumnType("bigint").IsRequired();
            Property(x => x.CancelingBy).HasColumnName(@"CancelingBy").HasColumnType("int").IsOptional();
            Property(x => x.CancelStatusType).HasColumnName(@"CancelStatusType").HasColumnType("bigint").IsRequired();
            Property(x => x.CancelingReason).HasColumnName(@"CancelingReason").HasColumnType("nvarchar").IsOptional().HasMaxLength(500);
            Property(x => x.CanceledBy).HasColumnName(@"CanceledBy").HasColumnType("int").IsOptional();
            Property(x => x.CanceledReason).HasColumnName(@"CanceledReason").HasColumnType("nvarchar").IsOptional().HasMaxLength(500);
            Property(x => x.CancelingTime).HasColumnName(@"CancelingTime").HasColumnType("datetime").IsOptional();
            Property(x => x.CanceledTime).HasColumnName(@"CanceledTime").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.ArrangeCourse).WithMany(b => b.TeachRecords).HasForeignKey(c => c.ArrangeCourseId); // FK_TeachRecord_ArrangeCourse
            HasRequired(a => a.Teacher).WithMany(b => b.TeachRecords).HasForeignKey(c => c.TeacherId); // FK_TeachRecord_Teacher
        }
    }

}
// </auto-generated>
